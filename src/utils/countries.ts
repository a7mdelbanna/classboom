export interface Country {
  code: string;
  name: string;
  flag: string;
  phoneCode: string;
}

export const COUNTRIES: Country[] = [
  { code: 'US', name: 'United States', flag: 'ðŸ‡ºðŸ‡¸', phoneCode: '+1' },
  { code: 'CA', name: 'Canada', flag: 'ðŸ‡¨ðŸ‡¦', phoneCode: '+1' },
  { code: 'GB', name: 'United Kingdom', flag: 'ðŸ‡¬ðŸ‡§', phoneCode: '+44' },
  { code: 'AU', name: 'Australia', flag: 'ðŸ‡¦ðŸ‡º', phoneCode: '+61' },
  { code: 'DE', name: 'Germany', flag: 'ðŸ‡©ðŸ‡ª', phoneCode: '+49' },
  { code: 'FR', name: 'France', flag: 'ðŸ‡«ðŸ‡·', phoneCode: '+33' },
  { code: 'ES', name: 'Spain', flag: 'ðŸ‡ªðŸ‡¸', phoneCode: '+34' },
  { code: 'IT', name: 'Italy', flag: 'ðŸ‡®ðŸ‡¹', phoneCode: '+39' },
  { code: 'NL', name: 'Netherlands', flag: 'ðŸ‡³ðŸ‡±', phoneCode: '+31' },
  { code: 'BE', name: 'Belgium', flag: 'ðŸ‡§ðŸ‡ª', phoneCode: '+32' },
  { code: 'CH', name: 'Switzerland', flag: 'ðŸ‡¨ðŸ‡­', phoneCode: '+41' },
  { code: 'AT', name: 'Austria', flag: 'ðŸ‡¦ðŸ‡¹', phoneCode: '+43' },
  { code: 'SE', name: 'Sweden', flag: 'ðŸ‡¸ðŸ‡ª', phoneCode: '+46' },
  { code: 'NO', name: 'Norway', flag: 'ðŸ‡³ðŸ‡´', phoneCode: '+47' },
  { code: 'DK', name: 'Denmark', flag: 'ðŸ‡©ðŸ‡°', phoneCode: '+45' },
  { code: 'FI', name: 'Finland', flag: 'ðŸ‡«ðŸ‡®', phoneCode: '+358' },
  { code: 'PL', name: 'Poland', flag: 'ðŸ‡µðŸ‡±', phoneCode: '+48' },
  { code: 'CZ', name: 'Czech Republic', flag: 'ðŸ‡¨ðŸ‡¿', phoneCode: '+420' },
  { code: 'HU', name: 'Hungary', flag: 'ðŸ‡­ðŸ‡º', phoneCode: '+36' },
  { code: 'RO', name: 'Romania', flag: 'ðŸ‡·ðŸ‡´', phoneCode: '+40' },
  { code: 'BG', name: 'Bulgaria', flag: 'ðŸ‡§ðŸ‡¬', phoneCode: '+359' },
  { code: 'HR', name: 'Croatia', flag: 'ðŸ‡­ðŸ‡·', phoneCode: '+385' },
  { code: 'SI', name: 'Slovenia', flag: 'ðŸ‡¸ðŸ‡®', phoneCode: '+386' },
  { code: 'SK', name: 'Slovakia', flag: 'ðŸ‡¸ðŸ‡°', phoneCode: '+421' },
  { code: 'LT', name: 'Lithuania', flag: 'ðŸ‡±ðŸ‡¹', phoneCode: '+370' },
  { code: 'LV', name: 'Latvia', flag: 'ðŸ‡±ðŸ‡»', phoneCode: '+371' },
  { code: 'EE', name: 'Estonia', flag: 'ðŸ‡ªðŸ‡ª', phoneCode: '+372' },
  { code: 'RU', name: 'Russia', flag: 'ðŸ‡·ðŸ‡º', phoneCode: '+7' },
  { code: 'UA', name: 'Ukraine', flag: 'ðŸ‡ºðŸ‡¦', phoneCode: '+380' },
  { code: 'BY', name: 'Belarus', flag: 'ðŸ‡§ðŸ‡¾', phoneCode: '+375' },
  { code: 'JP', name: 'Japan', flag: 'ðŸ‡¯ðŸ‡µ', phoneCode: '+81' },
  { code: 'KR', name: 'South Korea', flag: 'ðŸ‡°ðŸ‡·', phoneCode: '+82' },
  { code: 'CN', name: 'China', flag: 'ðŸ‡¨ðŸ‡³', phoneCode: '+86' },
  { code: 'IN', name: 'India', flag: 'ðŸ‡®ðŸ‡³', phoneCode: '+91' },
  { code: 'TH', name: 'Thailand', flag: 'ðŸ‡¹ðŸ‡­', phoneCode: '+66' },
  { code: 'VN', name: 'Vietnam', flag: 'ðŸ‡»ðŸ‡³', phoneCode: '+84' },
  { code: 'PH', name: 'Philippines', flag: 'ðŸ‡µðŸ‡­', phoneCode: '+63' },
  { code: 'ID', name: 'Indonesia', flag: 'ðŸ‡®ðŸ‡©', phoneCode: '+62' },
  { code: 'MY', name: 'Malaysia', flag: 'ðŸ‡²ðŸ‡¾', phoneCode: '+60' },
  { code: 'SG', name: 'Singapore', flag: 'ðŸ‡¸ðŸ‡¬', phoneCode: '+65' },
  { code: 'TW', name: 'Taiwan', flag: 'ðŸ‡¹ðŸ‡¼', phoneCode: '+886' },
  { code: 'HK', name: 'Hong Kong', flag: 'ðŸ‡­ðŸ‡°', phoneCode: '+852' },
  { code: 'MO', name: 'Macau', flag: 'ðŸ‡²ðŸ‡´', phoneCode: '+853' },
  { code: 'BR', name: 'Brazil', flag: 'ðŸ‡§ðŸ‡·', phoneCode: '+55' },
  { code: 'AR', name: 'Argentina', flag: 'ðŸ‡¦ðŸ‡·', phoneCode: '+54' },
  { code: 'CL', name: 'Chile', flag: 'ðŸ‡¨ðŸ‡±', phoneCode: '+56' },
  { code: 'CO', name: 'Colombia', flag: 'ðŸ‡¨ðŸ‡´', phoneCode: '+57' },
  { code: 'PE', name: 'Peru', flag: 'ðŸ‡µðŸ‡ª', phoneCode: '+51' },
  { code: 'VE', name: 'Venezuela', flag: 'ðŸ‡»ðŸ‡ª', phoneCode: '+58' },
  { code: 'UY', name: 'Uruguay', flag: 'ðŸ‡ºðŸ‡¾', phoneCode: '+598' },
  { code: 'PY', name: 'Paraguay', flag: 'ðŸ‡µðŸ‡¾', phoneCode: '+595' },
  { code: 'BO', name: 'Bolivia', flag: 'ðŸ‡§ðŸ‡´', phoneCode: '+591' },
  { code: 'EC', name: 'Ecuador', flag: 'ðŸ‡ªðŸ‡¨', phoneCode: '+593' },
  { code: 'MX', name: 'Mexico', flag: 'ðŸ‡²ðŸ‡½', phoneCode: '+52' },
  { code: 'ZA', name: 'South Africa', flag: 'ðŸ‡¿ðŸ‡¦', phoneCode: '+27' },
  { code: 'EG', name: 'Egypt', flag: 'ðŸ‡ªðŸ‡¬', phoneCode: '+20' },
  { code: 'MA', name: 'Morocco', flag: 'ðŸ‡²ðŸ‡¦', phoneCode: '+212' },
  { code: 'NG', name: 'Nigeria', flag: 'ðŸ‡³ðŸ‡¬', phoneCode: '+234' },
  { code: 'KE', name: 'Kenya', flag: 'ðŸ‡°ðŸ‡ª', phoneCode: '+254' },
  { code: 'GH', name: 'Ghana', flag: 'ðŸ‡¬ðŸ‡­', phoneCode: '+233' },
  { code: 'ET', name: 'Ethiopia', flag: 'ðŸ‡ªðŸ‡¹', phoneCode: '+251' },
  { code: 'TZ', name: 'Tanzania', flag: 'ðŸ‡¹ðŸ‡¿', phoneCode: '+255' },
  { code: 'UG', name: 'Uganda', flag: 'ðŸ‡ºðŸ‡¬', phoneCode: '+256' },
  { code: 'IL', name: 'Israel', flag: 'ðŸ‡®ðŸ‡±', phoneCode: '+972' },
  { code: 'TR', name: 'Turkey', flag: 'ðŸ‡¹ðŸ‡·', phoneCode: '+90' },
  { code: 'SA', name: 'Saudi Arabia', flag: 'ðŸ‡¸ðŸ‡¦', phoneCode: '+966' },
  { code: 'AE', name: 'United Arab Emirates', flag: 'ðŸ‡¦ðŸ‡ª', phoneCode: '+971' },
  { code: 'QA', name: 'Qatar', flag: 'ðŸ‡¶ðŸ‡¦', phoneCode: '+974' },
  { code: 'KW', name: 'Kuwait', flag: 'ðŸ‡°ðŸ‡¼', phoneCode: '+965' },
  { code: 'BH', name: 'Bahrain', flag: 'ðŸ‡§ðŸ‡­', phoneCode: '+973' },
  { code: 'OM', name: 'Oman', flag: 'ðŸ‡´ðŸ‡²', phoneCode: '+968' },
  { code: 'JO', name: 'Jordan', flag: 'ðŸ‡¯ðŸ‡´', phoneCode: '+962' },
  { code: 'LB', name: 'Lebanon', flag: 'ðŸ‡±ðŸ‡§', phoneCode: '+961' },
  { code: 'SY', name: 'Syria', flag: 'ðŸ‡¸ðŸ‡¾', phoneCode: '+963' },
  { code: 'IQ', name: 'Iraq', flag: 'ðŸ‡®ðŸ‡¶', phoneCode: '+964' },
  { code: 'IR', name: 'Iran', flag: 'ðŸ‡®ðŸ‡·', phoneCode: '+98' },
  { code: 'AF', name: 'Afghanistan', flag: 'ðŸ‡¦ðŸ‡«', phoneCode: '+93' },
  { code: 'PK', name: 'Pakistan', flag: 'ðŸ‡µðŸ‡°', phoneCode: '+92' },
  { code: 'BD', name: 'Bangladesh', flag: 'ðŸ‡§ðŸ‡©', phoneCode: '+880' },
  { code: 'LK', name: 'Sri Lanka', flag: 'ðŸ‡±ðŸ‡°', phoneCode: '+94' },
  { code: 'NP', name: 'Nepal', flag: 'ðŸ‡³ðŸ‡µ', phoneCode: '+977' },
  { code: 'BT', name: 'Bhutan', flag: 'ðŸ‡§ðŸ‡¹', phoneCode: '+975' },
  { code: 'MV', name: 'Maldives', flag: 'ðŸ‡²ðŸ‡»', phoneCode: '+960' },
  { code: 'NZ', name: 'New Zealand', flag: 'ðŸ‡³ðŸ‡¿', phoneCode: '+64' },
];

// Helper function to detect country from phone number
export function detectCountryFromPhone(phone: string): Country | null {
  if (!phone) return null;
  
  // Clean the phone number - remove spaces, dashes, parentheses
  const cleanPhone = phone.replace(/[\s\-\(\)]/g, '');
  
  // If it doesn't start with +, try to add + and detect
  const phoneToTest = cleanPhone.startsWith('+') ? cleanPhone : `+${cleanPhone}`;
  
  // Sort by phone code length (longest first) to match more specific codes first
  const sortedCountries = [...COUNTRIES].sort((a, b) => b.phoneCode.length - a.phoneCode.length);
  
  for (const country of sortedCountries) {
    if (phoneToTest.startsWith(country.phoneCode)) {
      return country;
    }
  }
  
  // If no exact match found, try some common patterns
  if (cleanPhone.startsWith('1') || cleanPhone.startsWith('+1')) {
    return COUNTRIES.find(c => c.code === 'US') || null;
  }
  
  if (cleanPhone.startsWith('44') || cleanPhone.startsWith('+44')) {
    return COUNTRIES.find(c => c.code === 'GB') || null;
  }
  
  if (cleanPhone.startsWith('49') || cleanPhone.startsWith('+49')) {
    return COUNTRIES.find(c => c.code === 'DE') || null;
  }
  
  if (cleanPhone.startsWith('33') || cleanPhone.startsWith('+33')) {
    return COUNTRIES.find(c => c.code === 'FR') || null;
  }
  
  if (cleanPhone.startsWith('86') || cleanPhone.startsWith('+86')) {
    return COUNTRIES.find(c => c.code === 'CN') || null;
  }
  
  if (cleanPhone.startsWith('91') || cleanPhone.startsWith('+91')) {
    return COUNTRIES.find(c => c.code === 'IN') || null;
  }
  
  return null;
}

// Helper function to get country by code
export function getCountryByCode(code: string): Country | undefined {
  return COUNTRIES.find(country => country.code === code);
}

// Helper function to format phone number with country
export function formatPhoneWithCountry(phone: string, countryCode?: string): string {
  if (!phone) return '';
  
  if (phone.startsWith('+')) {
    return phone;
  }
  
  if (countryCode) {
    const country = getCountryByCode(countryCode);
    if (country) {
      return `${country.phoneCode}${phone}`;
    }
  }
  
  return phone;
}